CREATE TABLE  "LB_AREAS" 
   (	"ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
	"DESCRIPCION" VARCHAR2(100 CHAR) NOT NULL ENABLE, 
	 CONSTRAINT "LB_AREAS_ID_PK" PRIMARY KEY ("ID")
  USING INDEX  ENABLE
   )
/
CREATE TABLE  "LB_GRUPOS" 
   (	"ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
	"AREA_ID" NUMBER, 
	"DESCRIPCION" VARCHAR2(100 CHAR) NOT NULL ENABLE, 
	 CONSTRAINT "LB_GRUPOS_ID_PK" PRIMARY KEY ("ID")
  USING INDEX  ENABLE
   )
/
CREATE TABLE  "LB_PRUEBAS" 
   (	"ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
	"GRUPO_ID" NUMBER, 
	"DESCRIPCION" VARCHAR2(100 CHAR) NOT NULL ENABLE, 
	 CONSTRAINT "LB_PRUEBAS_ID_PK" PRIMARY KEY ("ID")
  USING INDEX  ENABLE
   )
/
CREATE TABLE  "LB_IVA" 
   (	"ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
	"DESCRIPCION" VARCHAR2(25 CHAR) NOT NULL ENABLE, 
	"PORCENTAJE" NUMBER, 
	 CONSTRAINT "IVA_ID_PK" PRIMARY KEY ("ID")
  USING INDEX  ENABLE
   )
/
CREATE TABLE  "LB_LISTAS_PRECIOS" 
   (	"ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
	"PRUEBA_ID" NUMBER, 
	"IVA_ID" NUMBER, 
	"PRECIO" NUMBER(18,2) DEFAULT '0', 
	"CREATED" DATE NOT NULL ENABLE, 
	"CREATED_BY" VARCHAR2(255 CHAR) NOT NULL ENABLE, 
	"UPDATED" DATE NOT NULL ENABLE, 
	"UPDATED_BY" VARCHAR2(255 CHAR) NOT NULL ENABLE, 
	 CONSTRAINT "LB_LISTAS_PRECIOS_ID_PK" PRIMARY KEY ("ID")
  USING INDEX  ENABLE
   )
/
CREATE TABLE  "LB_ESTADOS" 
   (	"ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
	"DESCRIPCION" VARCHAR2(50 CHAR) NOT NULL ENABLE, 
	"EXPLICACION" VARCHAR2(255), 
	 CONSTRAINT "LB_ESTADOS_ID_PK" PRIMARY KEY ("ID")
  USING INDEX  ENABLE
   )
/
CREATE TABLE  "LB_PEDIDOS" 
   (	"ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
	"ESTADO_ID" NUMBER, 
	"FECHA" DATE, 
	"PACIENTE_ID" NUMBER NOT NULL ENABLE, 
	"MONTO_TOTAL" NUMBER(18,2) DEFAULT 0, 
	"MONTO_DESCUENTO" NUMBER(18,2) DEFAULT 0, 
	"BIOQUIMICO_ID" NUMBER NOT NULL ENABLE, 
	"CREATED" DATE NOT NULL ENABLE, 
	"CREATED_BY" VARCHAR2(255 CHAR) NOT NULL ENABLE, 
	"UPDATED" DATE NOT NULL ENABLE, 
	"UPDATED_BY" VARCHAR2(255 CHAR) NOT NULL ENABLE, 
	"EDAD" VARCHAR2(255) NOT NULL ENABLE, 
	 CONSTRAINT "LB_PEDIDOS_ID_PK" PRIMARY KEY ("ID")
  USING INDEX  ENABLE
   )
/
CREATE TABLE  "LB_SUB_PRUEBAS" 
   (	"ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
	"DESCRIPCION" VARCHAR2(100 CHAR) NOT NULL ENABLE, 
	"PRUEBA_ID" NUMBER, 
	 CONSTRAINT "LB_SUB_PRUEBAS_ID_PK" PRIMARY KEY ("ID")
  USING INDEX  ENABLE
   )
/
CREATE TABLE  "LB_PEDIDOS_DET" 
   (	"ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
	"PEDIDO_ID" NUMBER NOT NULL ENABLE, 
	"PRUEBA_ID" NUMBER, 
	"SUB_PRUEBA_ID" NUMBER, 
	"CANTIDAD" NUMBER, 
	"IVA_ID" NUMBER NOT NULL ENABLE, 
	"MONTO_UNITARIO" NUMBER(18,2) DEFAULT 0, 
	"MONTO_IVA" NUMBER(18,2) DEFAULT 0, 
	"MONTO_NETO" NUMBER(18,2) DEFAULT 0, 
	"MONTO_TOTAL" NUMBER(18,2) DEFAULT 0, 
	 CONSTRAINT "LB_PEDIDOS_DET_ID_PK" PRIMARY KEY ("ID")
  USING INDEX  ENABLE
   )
/
CREATE TABLE  "LB_USUARIOS" 
   (	"ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
	"NICK" VARCHAR2(30 CHAR) NOT NULL ENABLE, 
	"NOMBRE" VARCHAR2(50 CHAR) NOT NULL ENABLE, 
	"APELLIDO" VARCHAR2(50 CHAR) NOT NULL ENABLE, 
	"PASS" VARCHAR2(25) NOT NULL ENABLE, 
	 CONSTRAINT "LB_USUARIOS_ID_PK" PRIMARY KEY ("ID")
  USING INDEX  ENABLE, 
	 CONSTRAINT "LB_USUARIOS_NICK_UNQ" UNIQUE ("NICK")
  USING INDEX  ENABLE
   )
/
CREATE TABLE  "LB_BIOQUIMICOS" 
   (	"ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
	"NOMBRE" VARCHAR2(100 CHAR), 
	"APELLIDO" VARCHAR2(100 CHAR), 
	"CI" VARCHAR2(25 CHAR), 
	"REG_PROF" VARCHAR2(30 CHAR), 
	"DIRECCION" VARCHAR2(255 CHAR), 
	"CEL" VARCHAR2(25 CHAR), 
	"USUARIO_SISTEMA_ID" NUMBER, 
	 CONSTRAINT "LB_BIOQUIMICOS_ID_PK" PRIMARY KEY ("ID")
  USING INDEX  ENABLE, 
	 CONSTRAINT "LB_BIOQUIMICOS_CI_UNQ" UNIQUE ("CI")
  USING INDEX  ENABLE
   )
/
CREATE TABLE  "LB_ROLES" 
   (	"ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
	"DESCRIPCION" VARCHAR2(100 CHAR) NOT NULL ENABLE, 
	 CONSTRAINT "LB_ROLES_ID_PK" PRIMARY KEY ("ID")
  USING INDEX  ENABLE
   )
/
CREATE TABLE  "LB_USUARIOS_ROLES" 
   (	"ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
	"USUARIO_ID" NUMBER, 
	"ROL_ID" NUMBER, 
	 CONSTRAINT "LB_USUARIOS_ROLES_ID_PK" PRIMARY KEY ("ID")
  USING INDEX  ENABLE
   )
/
CREATE TABLE  "LB_GENEROS" 
   (	"ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
	"DESCRIPCION" VARCHAR2(25 CHAR), 
	"ABREVIATURA" VARCHAR2(3 CHAR), 
	 CONSTRAINT "LB_GENEROS_ID_PK" PRIMARY KEY ("ID")
  USING INDEX  ENABLE
   )
/
CREATE TABLE  "LB_PACIENTES" 
   (	"ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
	"GENERO_ID" NUMBER, 
	"NOMBRE" VARCHAR2(255 CHAR) NOT NULL ENABLE, 
	"APELLIDO" VARCHAR2(255 CHAR) NOT NULL ENABLE, 
	"CI" VARCHAR2(50 CHAR) NOT NULL ENABLE, 
	"CEL" VARCHAR2(50 CHAR) NOT NULL ENABLE, 
	"FECHA_NAC" DATE NOT NULL ENABLE, 
	"DIRECCION" VARCHAR2(255 CHAR), 
	 CONSTRAINT "LB_PACIENTES_ID_PK" PRIMARY KEY ("ID")
  USING INDEX  ENABLE
   )
/
CREATE TABLE  "LB_PERMISOS" 
   (	"ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
	"DESCRIPCION" VARCHAR2(4000 CHAR) NOT NULL ENABLE, 
	 CONSTRAINT "LB_PERMISOS_ID_PK" PRIMARY KEY ("ID")
  USING INDEX  ENABLE
   )
/
CREATE TABLE  "LB_ROLES_DET" 
   (	"ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
	"ROL_ID" NUMBER, 
	"PERMISO_ID" NUMBER, 
	 CONSTRAINT "ROLES_DET_ID_PK" PRIMARY KEY ("ID")
  USING INDEX  ENABLE
   )
/
ALTER TABLE  "LB_BIOQUIMICOS" ADD CONSTRAINT "LB_BIOQUIMICO_USUARIO_SISTE_FK" FOREIGN KEY ("USUARIO_SISTEMA_ID")
	  REFERENCES  "LB_USUARIOS" ("ID") ON DELETE CASCADE ENABLE
/
ALTER TABLE  "LB_GRUPOS" ADD CONSTRAINT "LB_GRUPOS_AREA_ID_FK" FOREIGN KEY ("AREA_ID")
	  REFERENCES  "LB_AREAS" ("ID") ON DELETE CASCADE ENABLE
/
ALTER TABLE  "LB_LISTAS_PRECIOS" ADD CONSTRAINT "LB_LISTAS_PRECIOS_IVA_ID_FK" FOREIGN KEY ("IVA_ID")
	  REFERENCES  "LB_IVA" ("ID") ON DELETE CASCADE ENABLE
/
ALTER TABLE  "LB_LISTAS_PRECIOS" ADD CONSTRAINT "LB_LISTAS_PRECIOS_PRUEBA_ID_FK" FOREIGN KEY ("PRUEBA_ID")
	  REFERENCES  "LB_PRUEBAS" ("ID") ON DELETE CASCADE ENABLE
/
ALTER TABLE  "LB_PACIENTES" ADD CONSTRAINT "LB_PACIENTES_GENERO_ID_FK" FOREIGN KEY ("GENERO_ID")
	  REFERENCES  "LB_GENEROS" ("ID") ENABLE
/
ALTER TABLE  "LB_PEDIDOS" ADD CONSTRAINT "LB_PEDIDOS_BIOQUIMICO_ID_FK" FOREIGN KEY ("BIOQUIMICO_ID")
	  REFERENCES  "LB_BIOQUIMICOS" ("ID") ON DELETE CASCADE ENABLE
/
ALTER TABLE  "LB_PEDIDOS_DET" ADD CONSTRAINT "LB_PEDIDOS_DET_IVA_ID_FK" FOREIGN KEY ("IVA_ID")
	  REFERENCES  "LB_IVA" ("ID") ON DELETE CASCADE ENABLE
/
ALTER TABLE  "LB_PEDIDOS_DET" ADD CONSTRAINT "LB_PEDIDOS_DET_PEDIDO_ID_FK" FOREIGN KEY ("PEDIDO_ID")
	  REFERENCES  "LB_PEDIDOS" ("ID") ON DELETE CASCADE ENABLE
/
ALTER TABLE  "LB_PEDIDOS_DET" ADD CONSTRAINT "LB_PEDIDOS_DET_PRUEBA_ID_FK" FOREIGN KEY ("PRUEBA_ID")
	  REFERENCES  "LB_PRUEBAS" ("ID") ON DELETE CASCADE ENABLE
/
ALTER TABLE  "LB_PEDIDOS_DET" ADD CONSTRAINT "LB_PEDIDOS_DET_SUB_PRUEBA_I_FK" FOREIGN KEY ("SUB_PRUEBA_ID")
	  REFERENCES  "LB_SUB_PRUEBAS" ("ID") ON DELETE CASCADE ENABLE
/
ALTER TABLE  "LB_PEDIDOS" ADD CONSTRAINT "LB_PEDIDOS_ESTADO_ID_FK" FOREIGN KEY ("ESTADO_ID")
	  REFERENCES  "LB_ESTADOS" ("ID") ON DELETE CASCADE ENABLE
/
ALTER TABLE  "LB_PEDIDOS" ADD CONSTRAINT "LB_PEDIDOS_PACIENTE_ID_FK" FOREIGN KEY ("PACIENTE_ID")
	  REFERENCES  "LB_PACIENTES" ("ID") ON DELETE CASCADE ENABLE
/
ALTER TABLE  "LB_PRUEBAS" ADD CONSTRAINT "LB_PRUEBAS_GRUPO_ID_FK" FOREIGN KEY ("GRUPO_ID")
	  REFERENCES  "LB_GRUPOS" ("ID") ON DELETE CASCADE ENABLE
/
ALTER TABLE  "LB_SUB_PRUEBAS" ADD CONSTRAINT "LB_SUB_PRUEBAS_PRUEBA_ID_FK" FOREIGN KEY ("PRUEBA_ID")
	  REFERENCES  "LB_PRUEBAS" ("ID") ON DELETE CASCADE ENABLE
/
ALTER TABLE  "LB_USUARIOS_ROLES" ADD CONSTRAINT "LB_USUARIOS_ROLES_ROL_ID_FK" FOREIGN KEY ("ROL_ID")
	  REFERENCES  "LB_ROLES" ("ID") ON DELETE CASCADE ENABLE
/
ALTER TABLE  "LB_USUARIOS_ROLES" ADD CONSTRAINT "LB_USUARIOS_ROL_USUARIO_ID_FK" FOREIGN KEY ("USUARIO_ID")
	  REFERENCES  "LB_USUARIOS" ("ID") ON DELETE CASCADE ENABLE
/
ALTER TABLE  "LB_ROLES_DET" ADD CONSTRAINT "ROLES_DET_PERMISO_ID_FK" FOREIGN KEY ("PERMISO_ID")
	  REFERENCES  "LB_PERMISOS" ("ID") ON DELETE CASCADE ENABLE
/
ALTER TABLE  "LB_ROLES_DET" ADD CONSTRAINT "ROLES_DET_ROL_ID_FK" FOREIGN KEY ("ROL_ID")
	  REFERENCES  "LB_ROLES" ("ID") ON DELETE CASCADE ENABLE
/
CREATE OR REPLACE EDITIONABLE FUNCTION  "LB_CALCULAR_EDAD" (P_FECHA DATE := null, p_a_fecha date := null) RETURN VARCHAR2 IS
  V_ANHO  NUMBER;
  V_MES   NUMBER;
  V_EDAD  VARCHAR2(52);
  V_FECHA DATE;
  l_fecha_dif date;

  l_mes_dif number;

  l_dia_dif number;
BEGIN
  l_fecha_dif := nvl(p_a_fecha, current_date);
  V_FECHA := Nvl(P_FECHA,current_date);
  V_ANHO := (MONTHS_BETWEEN(l_fecha_dif, V_FECHA))/12;
  
  l_mes_dif := (V_ANHO  - trunc(V_ANHO) ) * 12;
  l_dia_dif := (l_mes_dif - trunc(l_mes_dif)) * to_number((to_char(last_day(current_date), 'dd')))-1;

  l_dia_dif := case when l_dia_dif < 0 then 0 else l_dia_dif end;

  IF V_ANHO = 1 THEN
    V_EDAD := trunc(V_ANHO) ||' AÑO';
  ELSIF V_ANHO > 1 THEN
    V_EDAD := trunc(V_ANHO) ||' AÑOS';
  END IF;

  RETURN(Upper(V_EDAD||' '|| round(l_mes_dif, 0)||case when round(l_mes_dif, 0) = 1 then ' mes ' else ' meses ' end||round(l_dia_dif)||
  case when round(l_dia_dif) = 1 then ' día ' else ' días' end ));

END lb_calcular_edad;
/

CREATE INDEX  "LB_BIOQUIMICOS_I1" ON  "LB_BIOQUIMICOS" ("USUARIO_SISTEMA_ID")
/
CREATE INDEX  "LB_GRUPOS_I1" ON  "LB_GRUPOS" ("AREA_ID")
/
CREATE INDEX  "LB_LISTAS_PRECIOS_I1" ON  "LB_LISTAS_PRECIOS" ("IVA_ID")
/
CREATE INDEX  "LB_LISTAS_PRECIOS_I42" ON  "LB_LISTAS_PRECIOS" ("PRUEBA_ID")
/
CREATE INDEX  "LB_PACIENTES_I1" ON  "LB_PACIENTES" ("GENERO_ID")
/
CREATE INDEX  "LB_PEDIDOS_DET_I1" ON  "LB_PEDIDOS_DET" ("IVA_ID")
/
CREATE INDEX  "LB_PEDIDOS_DET_I142" ON  "LB_PEDIDOS_DET" ("PEDIDO_ID")
/
CREATE INDEX  "LB_PEDIDOS_DET_I153" ON  "LB_PEDIDOS_DET" ("PRUEBA_ID")
/
CREATE INDEX  "LB_PEDIDOS_DET_I164" ON  "LB_PEDIDOS_DET" ("SUB_PRUEBA_ID")
/
CREATE INDEX  "LB_PEDIDOS_I1" ON  "LB_PEDIDOS" ("BIOQUIMICO_ID")
/
CREATE INDEX  "LB_PEDIDOS_I62" ON  "LB_PEDIDOS" ("ESTADO_ID")
/
CREATE INDEX  "LB_PEDIDOS_I73" ON  "LB_PEDIDOS" ("PACIENTE_ID")
/
CREATE INDEX  "LB_PRUEBAS_I1" ON  "LB_PRUEBAS" ("GRUPO_ID")
/
CREATE INDEX  "LB_SUB_PRUEBAS_I1" ON  "LB_SUB_PRUEBAS" ("PRUEBA_ID")
/
CREATE INDEX  "LB_USUARIOS_ROLES_I1" ON  "LB_USUARIOS_ROLES" ("ROL_ID")
/
CREATE INDEX  "LB_USUARIOS_ROLES_I42" ON  "LB_USUARIOS_ROLES" ("USUARIO_ID")
/
CREATE INDEX  "ROLES_DET_I1" ON  "LB_ROLES_DET" ("PERMISO_ID")
/
CREATE INDEX  "ROLES_DET_I42" ON  "LB_ROLES_DET" ("ROL_ID")
/
CREATE OR REPLACE EDITIONABLE PACKAGE  "LB_PCK_AUTH" as
    function has_auth (
        p_username in varchar2,
        p_password in varchar2
    )
    return boolean;
end;
/
CREATE OR REPLACE EDITIONABLE PACKAGE BODY  "LB_PCK_AUTH" as
    function has_auth (
        p_username in varchar2,
        p_password in varchar2
    ) return boolean is
    l_r number;
    begin
        select distinct 1
        into l_r
        from lb_usuarios u
        inner join lb_usuarios_roles ur on (ur.usuario_id = u.id)
        inner join lb_roles r on (r.id = ur.rol_id)
        inner join lb_roles_det rd on (rd.rol_id = r.id)
        inner join lb_permisos p on (p.id = rd.permiso_id)
        where u.nick = p_username
        and   u.pass = p_password;

        return true;
    exception
        when no_data_found then
            return false;
    end has_auth;
end;
/

CREATE OR REPLACE EDITIONABLE TRIGGER  "LB_AREAS_BIU" 
    before insert or update  
    on lb_areas 
    for each row 
begin 
    :new.descripcion := upper(:new.descripcion); 
end lb_areas_biu; 

/
ALTER TRIGGER  "LB_AREAS_BIU" ENABLE
/
CREATE OR REPLACE EDITIONABLE TRIGGER  "LB_BIOQUIMICOS_BIU" 
    before insert or update  
    on lb_bioquimicos 
    for each row 
begin 
    :new.nombre := upper(:new.nombre); 
    :new.apellido := upper(:new.apellido); 
    :new.direccion := upper(:new.direccion); 
end lb_bioquimicos_biu; 

/
ALTER TRIGGER  "LB_BIOQUIMICOS_BIU" ENABLE
/
CREATE OR REPLACE EDITIONABLE TRIGGER  "LB_GRUPOS_BIU" 
    before insert or update  
    on lb_grupos 
    for each row 
begin 
    :new.descripcion := upper(:new.descripcion); 
end lb_grupos_biu; 

/
ALTER TRIGGER  "LB_GRUPOS_BIU" ENABLE
/
CREATE OR REPLACE EDITIONABLE TRIGGER  "LB_LISTAS_PRECIOS_BIU" 
    before insert or update  
    on lb_listas_precios 
    for each row 
begin 
    if inserting then 
        :new.created := sysdate; 
        :new.created_by := coalesce(sys_context('APEX$SESSION','APP_USER'),user); 
    end if; 
    :new.updated := sysdate; 
    :new.updated_by := coalesce(sys_context('APEX$SESSION','APP_USER'),user); 
end lb_listas_precios_biu; 

/
ALTER TRIGGER  "LB_LISTAS_PRECIOS_BIU" ENABLE
/
CREATE OR REPLACE EDITIONABLE TRIGGER  "LB_PACIENTES_BIU" 
    before insert or update  
    on lb_pacientes 
    for each row 
begin 
    :new.nombre := upper(:new.nombre); 
    :new.apellido := upper(:new.apellido); 
    :new.direccion := upper(:new.direccion); 
end lb_pacientes_biu; 

/
ALTER TRIGGER  "LB_PACIENTES_BIU" ENABLE
/
CREATE OR REPLACE EDITIONABLE TRIGGER  "LB_PEDIDOS_BIU" 
    before insert or update  
    on lb_pedidos 
    for each row 
begin 
    if inserting then 
        :new.created := sysdate; 
        :new.created_by := coalesce(sys_context('APEX$SESSION','APP_USER'),user); 
        :new.estado_id := lab_estado_pck.co_carga;
    end if;
    
    :new.updated := sysdate; 
    :new.updated_by := coalesce(sys_context('APEX$SESSION','APP_USER'),user); 
end lb_pedidos_biu; 

/
ALTER TRIGGER  "LB_PEDIDOS_BIU" ENABLE
/
CREATE OR REPLACE EDITIONABLE TRIGGER  "LB_PERMISOS_BIU" 
    before insert or update  
    on lb_permisos 
    for each row 
begin 
    :new.descripcion := upper(:new.descripcion); 
end lb_permisos_biu; 

/
ALTER TRIGGER  "LB_PERMISOS_BIU" ENABLE
/
CREATE OR REPLACE EDITIONABLE TRIGGER  "LB_PRUEBAS_BIU" 
    before insert or update  
    on lb_pruebas 
    for each row 
begin 
    :new.descripcion := upper(:new.descripcion); 
end lb_pruebas_biu; 

/
ALTER TRIGGER  "LB_PRUEBAS_BIU" ENABLE
/
CREATE OR REPLACE EDITIONABLE TRIGGER  "LB_USUARIOS_BIU" 
    before insert or update  
    on lb_usuarios 
    for each row 
begin 
    :new.nick := upper(:new.nick); 
    :new.nombre := upper(:new.nombre); 
    :new.apellido := upper(:new.apellido);

    if inserting then
      if :new.pass is null then
        raise_application_error(-20001, '1. Complete la contraseña');
      end if;
    else
      if :new.pass is null and :old.pass is not null then
        :new.pass := :old.pass;
      else
        raise_application_error(-20001, '2. Complete la contraseña');
      end if;
    end if;
end lb_usuarios_biu; 

/
ALTER TRIGGER  "LB_USUARIOS_BIU" ENABLE
/
